we can find which directory we are currently using by typing "pwd"
it stands for print working directory.

The "ls" command lists all the visible files in our current directory.

If we want to see all files including hidden files, we can run ls with the -la flag.

'cd' stands for change directory.

'cd..' will bring us back up one level in reverse.

directories are written in bold text.
files are shown in regular text.

/////////////////////////////////////////////////////

Working with files and folders.

'touch' command has a parameter.
touch hello.txt

it allows you to create files from the terminal.

touch new.txt

/////////////////////////////////////////////////////

the 'rm' command allows us to remove or delete files from the system.

rm new.txt

 we can also use the rm command to delete an entire directory.
To do that we type "rm” and then we use the “-rf” flag, and then
 type the folder name, in our case “mydirectory”.
/////////////////////////////////////////////////////

the 'mkdir' will make a new directory

mkdir mydirectory

/////////////////////////////////////////////////////

the 'cp' command takes two parameters.
It is short for copy.

it takes the file name and the destination in that order.

'cp hello.txt mydirectory'

/////////////////////////////////////////////////////

'mv hello.txt mydirectory' will move files to chosen area
it takes the file name and the destination in that order.

/////////////////////////////////////////////////////

'nano'  This will open up the Nano text editor.

'ctrl x ' will save the file, and then 'Y' to confirm and enter the name and press 'enter'

/////////////////////////////////////////////////////

'cat' hello.txt will print out the contents of the file to the terminal

/////////////////////////////////////////////////////

to compare txt files you need to have two files to compare
use 'diff' 

diff hello.txt world.txt

/////////////////////////////////////////////////////

'git status' shows us the current status of the repo.

/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
USING THE COMMAND LINE TO COMMIT CHANGES ETC.

echo "hello" >> story.txt
Creates new file with this txt  

git add story.txt
Creates git to be commited      (make sure changes saved)

git commit -m "Initial Commit"
Adds commit to github